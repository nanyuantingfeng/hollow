# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Root
    mutation: Mutation
}

type Mutation {
    deleteCluster(input: dashboard_clusterEp_deleteInput!): graphql_gQLMutationResult!
    saveCluster(input: dashboard_clusterEp_saveInput!): graphql_gQLMutationResult!
}

type Root {
    authList: [dashboard_sessionEp_authMethod!]!
    cluster(input: dashboard_clusterEp_getInput!): dashboard_cluster!
    clusters: [dashboard_cluster!]!
    loginUrl(input: dashboard_sessionEp_loginUrlRequest!): dashboard_sessionEp_loginUrlResponse!
    session: dashboard_sessionEp_sessionState!
}

type agent_clusterAdminService_nodeHealth {
    health: boot_healthCheckResult!
    url: String!
}

type boot_healthCheckResult {
    checks: [boot_healthCheckResult_procedureResult!]!
    outcome: boot_healthState!
}

type boot_healthCheckResult_procedureResult {
    name: String!
    state: boot_healthState!
}

type dashboard_cluster {
    checkAllNodesHealth: [agent_clusterAdminService_nodeHealth!]!
    dDL(input: dashboard_cluster_getDDLInput!): String!
    description: String!
    endpoint: String!
    id: ID!
    name: String!
    nameSpell: String!
    nodes: [String!]!
    secret: String!
}

type dashboard_sessionEp_authMethod {
    name: String!
    title: String!
}

type dashboard_sessionEp_loginUrlResponse {
    url: String!
}

type dashboard_sessionEp_sessionState {
    hasLogin: Boolean!
    user: dashboard_sessionEp_userState
}

type dashboard_sessionEp_userState {
    avatar: String!
    email: String!
    id: ID!
    name: String!
    roles: [String!]!
}

type graphql_gQLMutationResult {
    clientMutationId: String!
}

enum boot_healthState {
    DOWN
    UP
}

input dashboard_clusterEp_deleteInput {
    clientMutationId: String!
    clusterId: String!
}

input dashboard_clusterEp_getInput {
    clusterId: String!
}

input dashboard_clusterEp_saveInput {
    clientMutationId: String!
    description: String!
    endopint: String!
    id: String
    name: String!
    secret: String!
}

input dashboard_cluster_getDDLInput {
    verbose: Boolean!
}

input dashboard_sessionEp_loginUrlRequest {
    callback: String!
    name: String!
}
